model{
  
  # Modèle d'échantillonnage/ Vraisemblance
  
  n_obs[1]~dbin(p_obs[1], N_obs[1])
  n_obs[2]~dbin(p_obs[2], N_obs[2])
  n_obs[3]~dbin(p_obs[3], N_obs[3])
  n_obs[4]~dbin(p_obs[4], N_obs[4])
  n_obs[5]~dbin(p_obs[5], N_obs[5])
  n_obs[6]~dbin(p_obs[6], N_obs[6])
  n_obs[7]~dbin(p_obs[7], N_obs[7])
  
  p_obs[1] = p_prev[1]*(1-p_fneg[1])+(1-p_prev[1])*p_fpos[1]
  p_obs[2] = p_prev[2]*(1-p_fneg[2])+(1-p_prev[2])*p_fpos[2]
  p_obs[3] = p_prev[3]*(1-p_fneg[2])+(1-p_prev[3])*p_fpos[2]
  p_obs[4] = p_prev[4]*(1-p_fneg[2])+(1-p_prev[4])*p_fpos[2]
  p_obs[5] = p_prev[5]*(1-p_fneg[3])+(1-p_prev[5])*p_fpos[3]
  p_obs[6] = p_prev[6]*(1-p_fneg[4])+(1-p_prev[6])*p_fpos[4]
  p_obs[7] = p_prev[7]*(1-p_fneg[3])+(1-p_prev[7])*p_fpos[3]
  
  
  for (j in 1:N2){
    n_fpos[j]~dbin(p_fpos[j], N_neg[j])
    n_fneg[j] ~ dbin(p_fneg[j], N_pos[j])
  }
  
  #Priors
  for (i in 1:N1){
    p_prev[i] = exp(alpha_prev[i])/(1+exp(alpha_prev[i]))
    alpha_prev[i]~dnorm(mu_prev, sigma_prev)
  }
  for (j in 1:N2) {
    alpha_fpos[j]~dnorm(mu_fpos, sigma_fpos)
    alpha_fneg[j]~dnorm(mu_fneg, sigma_fneg) 
    p_fpos[j] = exp(alpha_fpos[j])/(1+exp(alpha_fpos[j]))
    p_fneg[j] = exp(alpha_fneg[j])/(1+exp(alpha_fneg[j]))
  }
  
  #hyper-priors
  mu_prev ~ dnorm(0, 1/10)
  mu_fpos ~ dnorm(0, 1/10)
  mu_fneg ~ dnorm(0, 1/10)
  sigma_prev ~ dexp(1)
  sigma_fpos ~ dexp(1)
  sigma_fneg ~ dexp(1)
}

